/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.51
 * Generated at: 2020-05-25 11:56:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.text.SimpleDateFormat;
import net.board.db.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("net.board.db");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");
	String id = null;
	if (session.getAttribute("id") != null) {
		id = (String) session.getAttribute("id");
	}
	List boardList = (List) request.getAttribute("boardlist");
	int listcount = ((Integer) request.getAttribute("listcount")).intValue();
	int nowpage = ((Integer) request.getAttribute("page")).intValue();
	int maxpage = ((Integer) request.getAttribute("maxpage")).intValue();
	int startpage = ((Integer) request.getAttribute("startpage")).intValue();
	int endpage = ((Integer) request.getAttribute("endpage")).intValue();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>TheDevelopers</title>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/indexStyle.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/headerStyle.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Start Header -->\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"brand-name\">\r\n");
      out.write("\t\t\t\t\t<a href=\"\">TheDevelopers</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"wrap\">\r\n");
      out.write("\t\t\t\t\t<div class=\"search\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"searchTerm\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" class=\"searchButton\">\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"fa fa-search\"></i>\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"login\">\r\n");
      out.write("\t\t\t\t");

					if (id == null) {
				
      out.write("\t\r\n");
      out.write("\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"./singInUp.me\">로그인 / 회원가입</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t");
	
					} else {
						if (id.equals("admin")) {
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"./MemberListAction.me\">회원관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"./MemberLogoutAction.me\">로그아웃</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t");
 
						} else {
				
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"./MemberLogoutAction.me\">로그아웃</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t");
 
						}
					}
				
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t<!-- End Header -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- Start navbar -->\r\n");
      out.write("\t<div class=\"navbar\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<ul class=\"row\">\r\n");
      out.write("\t\t\t\t<li><a href=\"\">공지사항</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">팁과정보</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">이모저모</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">아무거나질문</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">벼룩시장</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">정기모임/스터디</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">학원/홍보</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- End navbar -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- Start Home -->\r\n");
      out.write("\t<section class=\"Home\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td class=\"left caption\" colspan=\"4\">최신글</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"right\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"write\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"./BoardWrite.bo\">[글쓰기]</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr class=\"center\">\r\n");
      out.write("\t\t\t\t\t<td width=\"80px\">\r\n");
      out.write("\t\t\t\t\t\t<div>번호</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"450px\">\r\n");
      out.write("\t\t\t\t\t\t<div>제목</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"130px\">\r\n");
      out.write("\t\t\t\t\t\t<div>작성자</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"140px\">\r\n");
      out.write("\t\t\t\t\t\t<div>날짜</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"100px\">\r\n");
      out.write("\t\t\t\t\t\t<div>조회수</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t");

				int num = listcount - ((nowpage - 1) * 10);
				for (int i = 0; i < boardList.size(); i++) {
					BoardBean bl = (BoardBean) boardList.get(i);
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr class=\"contents\">\r\n");
      out.write("\t\t\t\t\t<td class=\"center\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(num );
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"left\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"subject\">\r\n");
      out.write("\t\t\t\t\t\t\t");
if (bl.getBOARD_RE_LEV() != 0) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t");
for (int a = 0; a <= bl.getBOARD_RE_LEV() * 2; a++) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t▶\r\n");
      out.write("\t\t\t\t\t\t\t");
} else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t▶\r\n");
      out.write("\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"./BoardDetailAction.bo?num=");
      out.print(bl.getBOARD_NUM());
      out.write("\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print(bl.getBOARD_SUBJECT());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<div>");
      out.print(bl.getBOARD_ID());
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<div>");
      out.print(bl.getBOARD_DATE());
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<div>");
      out.print(bl.getBOARD_READCOUNT());
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					num--;
				} 
				
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr class=\"center number\">\r\n");
      out.write("\t\t\t\t\t<td colspan=\"5\">\r\n");
      out.write("\t\t\t\t\t\t");
if (nowpage <= 1) { 
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t[이전]\r\n");
      out.write("\t\t\t\t\t\t");
} else { 
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"./BoardList.bo?page=");
      out.print(nowpage - 1);
      out.write("\">[이전]</a>&nbsp; \r\n");
      out.write("\t\t\t\t\t\t");
} 
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t");
for (int a = startpage; a <= endpage; a++) {
		 					if (a == nowpage) {
      out.write(" \r\n");
      out.write("\t\t \t\t\t\t\t\t[");
      out.print(a);
      out.write("]\r\n");
      out.write("\t\t \t\t\t\t\t");
} else { 
      out.write(" \r\n");
      out.write("\t\t \t\t\t\t\t\t<a href=\"./BoardList.bo?page=");
      out.print(a);
      out.write("\">\r\n");
      out.write("\t\t \t\t\t\t\t\t\t[");
      out.print(a);
      out.write("]\r\n");
      out.write("\t\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t");
} 
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
if (nowpage >= maxpage) { 
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t[다음]\r\n");
      out.write("\t\t\t\t\t\t");
} else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"./BoardList.bo?page=");
      out.print(nowpage + 1);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t[다음]</a> \r\n");
      out.write("\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<!-- 꼬리말 -->\r\n");
      out.write("\t\t\t<br><br>\r\n");
      out.write("\t\t\t구현 기능<br>\r\n");
      out.write("\t\t\t우측 상단 : 로그인 / 회원가입 --- 'admin'으로 로그인하면 회원관리, 로그아웃 탭 생성(그외는 로그아웃 탭 생성)<br>\r\n");
      out.write("\t\t\t그외 게시판 기능 동일\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section> \r\n");
      out.write("\t<!-- End Home -->\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://kit.fontawesome.com/a076d05399.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
